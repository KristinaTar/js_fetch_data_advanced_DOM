{"version":3,"sources":["scripts/main.js"],"names":["url","getPhones","fetch","then","response","ok","json","Error","status","statusText","getPhonesWithId","id","getFirstReceivedDetails","arr","Promise","race","details","div","document","createElement","className","insertAdjacentHTML","name","body","append","getAllSuccessfulDetails","all","h3","innerText","map","item","getThreeFastestDetails","style","bottom","backgroundColor","fisrtElemets","forEach","xPromise","PholeDetail","length","push","el","phones","promisesArr","phone"],"mappings":";AAAA,aAEA,IAAMA,EAAM,mEAENC,EAAY,WACTC,OAAAA,MAASF,GAAAA,OAAAA,EAAT,UACJG,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHP,IAAIC,MAASH,GAAAA,OAAAA,EAASI,OAAYJ,OAAAA,OAAAA,EAASK,gBAOpDC,EAAkB,SAACC,GAChBT,OAAAA,MAASF,GAAAA,OAAAA,EAAOW,KAAAA,OAAAA,EAAhB,UACJR,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHP,IAAIC,MAASH,GAAAA,OAAAA,EAASI,OAAYJ,OAAAA,OAAAA,EAASK,gBAOpDG,EAA0B,SAACC,GACxBC,OAAAA,QAAQC,KAAKF,GACjBV,KAAK,SAAAa,GACEC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAY,iBAEhBH,EAAII,mBAAmB,YAELL,4DAAAA,OAAAA,EAAQL,GACNK,mCAAAA,OAAAA,EAAQM,KAH5B,kBAMAJ,SAASK,KAAKC,OAAOP,MAIrBQ,EAA0B,SAACZ,GACxBC,OAAAA,QAAQY,IAAIb,GAChBV,KAAK,SAAAa,GACEC,IAAAA,EAAMC,SAASC,cAAc,OAC7BQ,EAAKT,SAASC,cAAc,MAElCQ,EAAGC,UAAY,iBACfX,EAAIO,OAAOG,GAEXV,EAAIG,UAAY,iBAEhBJ,EAAQa,IAAI,SAAAC,GACVb,EAAII,mBAAmB,YACLS,6BAAAA,OAAAA,EAAKnB,GACHmB,qCAAAA,OAAAA,EAAKR,KAFzB,oBAMFJ,SAASK,KAAKC,OAAOP,MAIrBc,EAAyB,SAAClB,GACxBI,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAY,iBAChBH,EAAIe,MAAMC,OAAS,OACnBhB,EAAIe,MAAME,gBAAkB,OAE5BjB,EAAII,mBAAmB,YAAvB,6CAIAH,SAASK,KAAKC,OAAOP,GAEfkB,IAAAA,EAAe,GAUdrB,OARPD,EAAIuB,QAAQ,SAAAC,GACVA,EAASlC,KAAK,SAAAmC,GACRH,EAAaI,OAAS,GACxBJ,EAAaK,KAAKF,OAKjBxB,QAAQY,IAAIb,GAChBV,KAAK,WACJgC,EAAaC,QAAQ,SAAAK,GACnBxB,EAAII,mBAAmB,YACPoB,2BAAAA,OAAAA,EAAG9B,GACD8B,mCAAAA,OAAAA,EAAGnB,KAFrB,yBAQRrB,IACGE,KAAK,SAAAuC,GACEC,IAAAA,EAAcD,EAAOb,IAAI,SAAAe,GAASlC,OAAAA,EAAgBkC,EAAMjC,MAE9DC,EAAwB+B,GACxBlB,EAAwBkB,GACxBZ,EAAuBY","file":"main.0da8ff20.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst getPhones = () => {\n  return fetch(`${url}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return new Error(`${response.status} = ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nconst getPhonesWithId = (id) => {\n  return fetch(`${url}/${id}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return new Error(`${response.status} = ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nconst getFirstReceivedDetails = (arr) => {\n  return Promise.race(arr)\n    .then(details => {\n      const div = document.createElement('div');\n\n      div.className = 'first-received';\n\n      div.insertAdjacentHTML('beforeend', `\n        <h3>First Received</h3>\n        <li>Phone-id: ${details.id}</li>\n        <li>Phone-name: ${details.name}</li>\n      `);\n\n      document.body.append(div);\n    });\n};\n\nconst getAllSuccessfulDetails = (arr) => {\n  return Promise.all(arr)\n    .then(details => {\n      const div = document.createElement('div');\n      const h3 = document.createElement('h3');\n\n      h3.innerText = 'All Successful';\n      div.append(h3);\n\n      div.className = 'all-successful';\n\n      details.map(item => {\n        div.insertAdjacentHTML('beforeend', `\n          <li>Phone-id: ${item.id}</li>\n          <li>Phone-name: ${item.name}</li>\n      `);\n      });\n\n      document.body.append(div);\n    });\n};\n\nconst getThreeFastestDetails = (arr) => {\n  const div = document.createElement('div');\n\n  div.className = 'first-received';\n  div.style.bottom = '20px';\n  div.style.backgroundColor = 'pink';\n\n  div.insertAdjacentHTML('beforeend', `\n    <h3>Three Fastest Received</h3>\n  `);\n\n  document.body.append(div);\n\n  const fisrtElemets = [];\n\n  arr.forEach(xPromise => {\n    xPromise.then(PholeDetail => {\n      if (fisrtElemets.length < 3) {\n        fisrtElemets.push(PholeDetail);\n      }\n    });\n  });\n\n  return Promise.all(arr)\n    .then(() => {\n      fisrtElemets.forEach(el => {\n        div.insertAdjacentHTML('beforeend', `\n        <li>Phone-id: ${el.id}</li>\n        <li>Phone-name: ${el.name}</li>\n        `);\n      });\n    });\n};\n\ngetPhones()\n  .then(phones => {\n    const promisesArr = phones.map(phone => getPhonesWithId(phone.id));\n\n    getFirstReceivedDetails(promisesArr);\n    getAllSuccessfulDetails(promisesArr);\n    getThreeFastestDetails(promisesArr);\n  });\n"]}